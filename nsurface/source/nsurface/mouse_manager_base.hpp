#pragma once

/** @file nsurface/mouse_manager_base.hpp
*
*   Implement base functionalities for mouse manager.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nsurface/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nsurface/enums.hpp>
#include <nsurface/events/.hpp>
#include <nsurface/typedef_cross_platform.hpp>

#pragma endregion



 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace nsurface {

	NSURFACE_USING_NLIB_NAMESPACES();



	class NSURFACE_API A_mouse_manager {

    public:
        NSURFACE_FRIEND_CLASSES;
        NCPP_OBJECT_FRIEND_CLASSES();



	private:
		F_mouse_button_down_event button_down_event_;
		F_mouse_button_up_event button_up_event_;
		F_mouse_move_event move_event_;
		F_mouse_visibility_change_event visibility_change_event_;

	protected:
		F_vector2_i mouse_position_;
		b8 is_visible_ = true;

	public:
		NCPP_DECLARE_STATIC_EVENTS(
			button_down_event_,
			button_up_event_,
			move_event_,
			visibility_change_event_
		);

		NCPP_FORCE_INLINE PA_vector2_i mouse_position() const noexcept { return mouse_position_; }
		NCPP_FORCE_INLINE b8 is_visible() const noexcept { return is_visible_; }



	protected:
		A_mouse_manager();

    public:
		virtual ~A_mouse_manager();



        ////////////////////////////////////////////////////////////////////////////////////
        //  Internal platform specific interface
        ////////////////////////////////////////////////////////////////////////////////////

	public:
		void set_mouse_position(PA_vector2_i new_mouse_position); // for documentations
		void set_mouse_visible(b8); // for documentations



	public:
		inline F_mouse_manager* as_current_platform_p() { return reinterpret_cast<F_mouse_manager*>(this); }
		inline F_mouse_manager& as_current_platform() { return *reinterpret_cast<F_mouse_manager*>(this); }

	};

}
